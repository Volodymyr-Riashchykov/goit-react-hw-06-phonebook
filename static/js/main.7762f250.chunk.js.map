{"version":3,"sources":["component/AddContactInput/AddContactInput.module.css","component/AddContact/AddContact.module.css","component/ContactItem/ContactItem.module.css","component/App/App.module.css","component/ContactList/ContactList.module.css","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phonebook-reducer.js","Redux/store.js","component/AddContactInput/AddContactInput.js","component/AddContact/AddContact.js","component/ContactItem/ContactItem.js","Redux/phonebook/phonebook-selectors.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/App/App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","find","item","toLowerCase","alert","filter","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","AddContactInput","type","value","hahdleChange","title","pattern","className","style","label","input","onChange","required","AddContact","useState","setName","setNumber","dispatch","useDispatch","e","currentTarget","resetState","inputForm","onSubmit","preventDefault","btn","ContactItem","contact","delet","button","onClick","getItems","getFilter","getVisible","includes","ContactList","contacts","useSelector","list","map","Filtr","App","container","length","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.7762f250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AddContactInput_label__2Nga4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"AddContact_inputForm__2NLax\",\"btn\":\"AddContact_btn__5HvUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1G886\",\"button\":\"ContactItem_button__9tWGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Ld35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3-iM_\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction(\"phonebook/add\", (name, number) => ({\r\n payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction(\"phonebook/delete\");\r\n\r\nconst changeFilter = createAction(\"phonebook/filter\");\r\n\r\nexport { addContact, deleteContact, changeFilter }","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./phonebook-actions\"\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    if (state.find((item) => item.name.toLowerCase() === payload.name.toLowerCase())) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n        return state\r\n    }\r\n      return [...state, payload];\r\n  },\r\n  [deleteContact]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload)\r\n  }\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, { payload }) => (payload)\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter\r\n})","\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"contacts\",\r\n    storage,\r\n    blacklist: [\"filter\"],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]\r\n    }\r\n}), logger]\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(persistConfig, phonebookReducer),\r\n},\r\n    middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store,persistor };","import PropTypes from \"prop-types\";\r\nimport style from \"./AddContactInput.module.css\"\r\n\r\nexport default function AddContactInput({type,name,value,hahdleChange,title,pattern}) {\r\n    return (\r\n        <label className={style.label}>{name}\r\n            <input\r\n                className={style.input}\r\n                type={type}\r\n                name={name.toLowerCase()}\r\n                value={value}\r\n                onChange={hahdleChange}\r\n                title={title}\r\n                pattern={pattern}\r\n                required\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nAddContactInput.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    pattern: PropTypes.string.isRequired,\r\n    hahdleChange: PropTypes.func.isRequired,\r\n}","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AddContactInput from \"../AddContactInput/AddContactInput\";\r\nimport style from './AddContact.module.css'\r\nimport {addContact} from \"../../Redux/phonebook/phonebook-actions\";\r\n\r\nexport default function AddContact() {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const hahdleChange = e => {\r\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\r\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // handleAddContact(name, number);\r\n        dispatch(addContact(name,number))\r\n        resetState();\r\n    };\r\n\r\n    const resetState = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    }\r\n    \r\n    return (\r\n        <form className={style.inputForm} onSubmit={handleSubmit}>\r\n            <AddContactInput\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                value={name}\r\n                hahdleChange={hahdleChange}\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            />\r\n            <AddContactInput\r\n                type=\"tel\"\r\n                name=\"Number\"\r\n                value={number}\r\n                hahdleChange={hahdleChange}\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            />\r\n                \r\n            \r\n            <button type=\"submit\" className={style.btn}>Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({contact,delet}) {\r\n    return (\r\n        <li className={style.item}>\r\n            <p>{contact.name}:</p>\r\n            <p>{contact.number}</p>\r\n            <button\r\n                className={style.button}\r\n                onClick={()=>delet(contact.id)}\r\n            >delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    delet: PropTypes.func.isRequired,\r\n}","export const getItems = state => state.phonebook.items;\r\n\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getVisible = state => {\r\n    return getItems(state).filter((contact) =>\r\n            contact.name.toLowerCase().includes(getFilter(state).toLowerCase())\r\n        );\r\n}\r\n ","// import PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import  deleteContact  from \"../../Redux/phonebook/phonebook-actions\";\r\nimport ContactItem from \"../ContactItem/ContactItem\"\r\nimport style from \"./ContactList.module.css\"\r\nimport { deleteContact } from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getVisible } from \"../../Redux/phonebook/phonebook-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisible)\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n      <>\r\n        <ul className={style.list}>\r\n          {contacts.map(contact => {\r\n            return (\r\n                <ContactItem key={contact.id} contact={contact} delet={(id)=>dispatch(deleteContact(id))}/>\r\n            )\r\n          })}\r\n      </ul>\r\n      </>\r\n    )\r\n}\r\n","import AddContactInput from \"../AddContactInput/AddContactInput\"\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getFilter } from \"../../Redux/phonebook/phonebook-selectors\";\r\n\r\nexport default function Filtr() {\r\n    const value = useSelector(getFilter)\r\n    const dispatch = useDispatch()\r\n    return (\r\n         <AddContactInput\r\n                type=\"text\"\r\n                name=\"Find contacts by name\"\r\n                value={value}\r\n                hahdleChange={(e)=>dispatch(changeFilter(e.currentTarget.value))}\r\n                title=\"\"\r\n                pattern=\"\"\r\n            />\r\n    )\r\n}\r\n","import style from './App.module.css'\nimport AddContact from \"../AddContact/AddContact\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filtr from \"../Filter/Filter\";\nimport { useSelector } from 'react-redux';\nimport { getItems } from '../../Redux/phonebook/phonebook-selectors';\n\nexport default function App() {\n  const contacts = useSelector(getItems)\n  \n    return (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <AddContact  />\n        <h2>Contacts</h2>\n        {contacts.length > 0 ?\n        \n          <>\n            <Filtr />\n            <ContactList  />\n          </>\n         : (<h4>Your phonebook is empty</h4>)\n        } \n        \n      </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport {store,persistor} from \"./Redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport './index.css';\nimport App from './component/App/App'\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <PersistGate loading={null} persistor={persistor}>\n  \n    <App />\n  \n  </PersistGate >\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}